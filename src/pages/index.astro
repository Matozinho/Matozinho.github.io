---
import { Picture } from "astro:assets";
import { getCollection } from "astro:content";
import { BlogPostCard } from "@/components/BlogPostCard";
import { ArrowRight } from "@carbon/icons-react";
import isEmpty from "lodash.isempty";
import Avatar from "../assets/images/avatar.svg";
import { FollowMeCard } from "../components/follow-me-card";
import { Icons } from "../components/icons";
import MainLayout from "../layouts/MainLayout.astro";
import { getSortedPosts } from "../lib/content-utils";

const allBlogPosts = await getCollection("posts");
const sortedPosts = (await getSortedPosts()).slice(0, 3);
const plannedPosts = allBlogPosts
	.filter((post) => post.data.planned === true)
	.slice(0, 3);

const colors = [
	"from-[#D8B4FE] to-[#818CF8]",
	"from-[#6EE7B7] via-[#3B82F6] to-[#9333EA]",
	"from-[#FDE68A] via-[#FCA5A5] to-[#FECACA]",
];

const followMeCards = [
	{
		title: "Linkedin",
		href: "https://www.linkedin.com/in/felipi-matozinho/",
		description: "Linkedin profile",
		icon: Icons.Linkedin,
	},
	{
		title: "Github",
		href: "https://github.com/matozinho",
		description: "Follow me on github",
		icon: Icons.Github,
	},
	{
		title: "Twitter",
		href: "https://x.com/matozinho_dev",
		description: "Follow me on twitter",
		icon: Icons.Twitter,
	},
];
---

<MainLayout>
  <div
    class="flex flex-col justify-center items-start max-w-2xl border-gray-200 dark:border-gray-700 mx-auto pb-16"
  >
    <div class="flex flex-col-reverse sm:flex-row items-start">
      <div class="flex flex-col pr-8">
        <h1
          class="font-bold text-3xl md:text-5xl tracking-tight mb-1 text-black dark:text-white"
          transition:name="heading"
        >
          Matozinho
        </h1>
        <h2 class="text-gray-700 dark:text-gray-200 mb-4">
          Sharing my Passion for Coding and Problem-Solving.
        </h2>
      </div>
      <div class="w-[80px] sm:w-[176px] relative mb-8 sm:mb-0 mr-auto">
        <Picture
          src={Avatar}
          class="rounded-full"
          alt="Matozinho"
          formats={["avif", "webp"]}
        />
      </div>
    </div>
    <div class="flex flex-col w-full gap-6 lg:gap-8">
      <section class="flex flex-col w-full gap-4 lg:gap-6">
        <h3
          class="text-2xl font-bold tracking-tight text-black md:text-4xl dark:text-white"
        >
          Follow Me
        </h3>
        <div
          class="grid w-full grid-cols-1 gap-4 my-2 sm:grid-cols-2"
        >
          {followMeCards.map((card) => <FollowMeCard {...card} />)}
        </div>
      </section>
      {
        !isEmpty(plannedPosts) && (
          <section class="flex flex-col gap-4 lg:gap-6 w-full">
            <div class="flex w-full justify-between">
              <h3 class="font-bold text-2xl md:text-4xl tracking-tight text-black dark:text-white">
                Planned Posts
              </h3>

              <a
                href="/plans"
                class="flex items-center text-gray-600 dark:text-gray-400 hover:text-gray-800 dark:hover:text-gray-200 transition-all"
              >
                see all
                <ArrowRight />
              </a>
            </div>

            <div class="flex flex-col gap-4 md:flex-row">
              {plannedPosts.map((post) => (
                <BlogPostCard
                  link={`/plans`}
                  title={post.data.title}
                  slug={post.slug}
                  gradient={colors[0]}
                  tags={post.data.tags}
                  categories={post.data.categories}
                />
              ))}
            </div>
          </section>
        )
      }

      <section class="flex flex-col w-full gap-4 lg:gap-6">
        <div class="flex justify-between">
          <h3
            class="font-bold text-2xl md:text-4xl tracking-tight text-black dark:text-white"
          >
            Recent Posts
          </h3>

          <a
            href="/posts"
            class="flex items-center text-gray-600 dark:text-gray-400 hover:text-gray-800 dark:hover:text-gray-200 transition-all"
          >
            see all
            <ArrowRight />
          </a>
        </div>
        <div class="flex flex-col md:flex-row gap-4">
          {
            sortedPosts.map((post) => (
              <BlogPostCard
                link={`/post/${post.slug}`}
                title={post.data.title}
                slug={post.slug}
                gradient={colors[0]}
                tags={post.data.tags}
                categories={post.data.categories}
              />
            ))
          }
        </div>
      </section>
    </div>
  </div>
</MainLayout>
