---
import { Picture } from "astro:assets";
import { getCollection } from "astro:content";
import { PostMetadata } from "@/components/post-metadata";
import { getPostUrlBySlug } from "@/lib/url-utils";
import { ChevronLeft, ChevronRight, Menu } from "@carbon/icons-react";
import { format, parseISO } from "date-fns";
import readingTime from "reading-time";
import Avatar from "../../assets/images/avatar.svg";
import GiscusComment from "../../components/GiscusComment";
import MainLayout from "../../layouts/MainLayout.astro";
import type { BlogPost } from "@/content/config";
export const prerender = true;

export async function getStaticPaths() {
  const blogsEntries = await getCollection("posts");
  const posts = blogsEntries.map((post) => ({
    params: { slug: post.slug },
    props: { post },
  }));
  return posts;
}
const { post } = Astro.props;
const { Content } = await post.render();
---

<MainLayout
  title={post.data.title}
  description={post.data.description}
  ogImage={Astro.site + "images/" + post.data.image}
>
  <article
    class="flex flex-col items-start justify-center w-full max-w-2xl mx-auto mb-16"
  >
    <h1
      class="mb-4 text-3xl font-bold tracking-tight text-black md:text-5xl dark:text-white"
      transition:name="heading"
    >
      {post.data.title}
    </h1>
    <div
      class="flex flex-col items-start justify-between w-full mt-2 md:flex-row md:items-center"
    >
      <div class="flex items-center">
        <Picture
          src={Avatar}
          class="rounded-full h-6 w-6"
          alt="Matozinho"
          formats={["avif", "webp"]}
        />
        <p class="ml-2 text-sm text-gray-700 dark:text-gray-300">
          {"Matozinho / "}
          {
            format(
              parseISO(post.data.publishedAt.toISOString()),
              "MMMM dd, yyyy",
            )
          }
        </p>
      </div>
      <p
        class="mt-2 text-sm text-end text-gray-600 dark:text-gray-400 min-w-32 md:mt-0"
      >
        {readingTime(post.body).text}
      </p>
    </div>
    <section class="flex w-full mt-3 justify-between">
      <PostMetadata postData={post.data as BlogPost["data"]} />
    </section>
    <div class="w-full mt-2 prose dark:prose-invert max-w-none break-words">
      <h2>Description</h2>
      <p>{post.data.description}</p>
      <Content />
    </div>
    {
      (post.data.prevSlug || post.data.nextSlug) && (
        <section class="mt-8 flex w-full gap-2 justify-between">
          {post.data.prevSlug ? (
            <a
              href={getPostUrlBySlug(post.data.prevSlug)}
              class="items-center flex gap-2 w-1/2 p-2 rounded-lg bg-background/60 hover:bg-foreground/5 transition-all duration-300"
            >
              <ChevronLeft size={24} />
              <span class="line-clamp-2 font-semibold">
                {post.data.prevTitle}
              </span>
            </a>
          ) : (
            <div class="flex w-1/2" />
          )}

          {post.data.nextSlug ? (
            <a
              href={getPostUrlBySlug(post.data.nextSlug)}
              class="items-center flex gap-2 w-1/2 p-2 rounded-lg bg-background/60 hover:bg-foreground/5 transition-all duration-300"
            >
              <span class="line-clamp-2 font-semibold">
                {post.data.nextTitle}
              </span>
              <ChevronRight size={24} />
            </a>
          ) : (
            <div class="flex w-1/2" />
          )}
        </section>
      )
    }
    <GiscusComment client:only="react" />
    <div class="text-sm text-gray-700 dark:text-gray-300">
      <a
        href="https://github.com/matozinho/Matozinho.github.io"
        target="_blank"
        rel="noopener noreferrer"
      >
        {"Suggest Change"}
      </a>
    </div>
  </article>
</MainLayout>
